{
  "openapi": "3.0.0",
  "paths": {
    "/tenantAddresses": {
      "post": {
        "operationId": "TenantAddressController_createTenantAddress",
        "summary": "Create a Tenant Address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiCreateTenantAddressDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "operationId": "TenantAddressController_updateTenantAddress",
        "summary": "Update a Tenant Address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiUpdateTenantAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/tenantAddresses/{syncId}": {
      "delete": {
        "operationId": "TenantAddressController_deleteTenantAddress",
        "summary": "Delete a Tenant Address",
        "parameters": [
          {
            "name": "syncId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/courseGroups": {
      "post": {
        "operationId": "CourseGroupController_createCourseGroup",
        "summary": "Create a Course Group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiCourseGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Course Groups"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "operationId": "CourseGroupController_updateCourseGroup",
        "summary": "Update a Course Group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiUpdateCourseGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Course Groups"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/courseGroups/{syncId}": {
      "delete": {
        "operationId": "CourseGroupController_deleteCourseGroup",
        "summary": "Delete a Course Group",
        "parameters": [
          {
            "name": "syncId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Course Groups"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/events": {
      "post": {
        "operationId": "EventsController_createEvent",
        "summary": "Create an Event",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiEventDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "operationId": "EventsController_updateEvent",
        "summary": "Update an Event",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiUpdateEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/events/{syncId}": {
      "delete": {
        "operationId": "EventsController_deleteEvent",
        "summary": "Delete an Event",
        "parameters": [
          {
            "name": "syncId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/accessCodes": {
      "post": {
        "operationId": "AccessCodeController_createAccessCode",
        "summary": "Create a new accessCode and optional a new user with address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiAccessCodeUserAndAddressCreateOutgoingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Access Codes"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "operationId": "AccessCodeController_updateAccessCode",
        "summary": "Update an accessCode and/or an user and/or the users address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiAccessCodeUserAndAddressUpdateOutgoingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Access Codes"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/users/avatars": {
      "patch": {
        "operationId": "AvatarController_updateAvatar",
        "summary": "Set a user's Avatar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiAvatarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Avatars"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/users/avatars/{syncId}": {
      "delete": {
        "operationId": "AvatarController_deleteAvatar",
        "summary": "Delete a user's Avatar",
        "parameters": [
          {
            "name": "syncId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Avatars"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Yarrive External API Consumer API",
    "description": "External API for Yarrive External API Consumer",
    "version": "0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "X-Api-Key": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header",
        "description": "The external service submits the API-Key through the /sync endpoint"
      }
    },
    "schemas": {
      "ExternalApiErrorResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "error": {
            "type": "string",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "details": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "error",
          "message"
        ]
      },
      "ExternalApiCreateTenantAddressDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "maxLength": 255
          },
          "postalCode": {
            "type": "string",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "maxLength": 255
          },
          "street": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "openingHours": {
            "type": "string",
            "maxLength": 255
          },
          "isBillingAddress": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "syncId",
          "country",
          "state",
          "postalCode",
          "city",
          "street",
          "title",
          "description",
          "openingHours",
          "isBillingAddress",
          "type"
        ]
      },
      "ExternalApiSuccessResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "success"
        ]
      },
      "ExternalApiUpdateTenantAddressDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "maxLength": 255
          },
          "postalCode": {
            "type": "string",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "maxLength": 255
          },
          "street": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "openingHours": {
            "type": "string",
            "maxLength": 255
          },
          "isBillingAddress": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "syncId"
        ]
      },
      "ExternalApiCourseGroupDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string",
            "readOnly": true
          },
          "licenseType": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "from": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          },
          "to": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "syncId",
          "licenseType",
          "name",
          "description",
          "from",
          "to"
        ]
      },
      "ExternalApiUpdateCourseGroupDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "format": "date-time",
            "type": "string"
          },
          "to": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "syncId"
        ]
      },
      "ExternalApiEventAttendeeDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "attended": {
            "type": "boolean",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "syncId",
          "attended",
          "note"
        ]
      },
      "ExternalApiEventDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true
          },
          "plannedDateFrom": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          },
          "plannedDateTo": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "tenantAddressSyncId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mandatory": {
            "type": "boolean",
            "readOnly": true
          },
          "attendees": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiEventAttendeeDto"
            }
          }
        },
        "required": [
          "syncId",
          "type",
          "plannedDateFrom",
          "plannedDateTo",
          "title",
          "description",
          "tenantAddressSyncId",
          "mandatory",
          "attendees"
        ]
      },
      "ExternalApiUpdateEventDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "plannedDateFrom": {
            "format": "date-time",
            "type": "string"
          },
          "plannedDateTo": {
            "format": "date-time",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantAddressSyncId": {
            "type": "string",
            "nullable": true
          },
          "mandatory": {
            "type": "boolean"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiEventAttendeeDto"
            }
          }
        },
        "required": [
          "syncId",
          "attendees"
        ]
      },
      "ExternalApiCreateUserDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "maxLength": 255
          },
          "firstname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "lastname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "birthdate": {
            "format": "date-time",
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "syncId"
        ]
      },
      "ExternalApiAddressDto": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "readOnly": true
          },
          "state": {
            "type": "string",
            "readOnly": true
          },
          "postalCode": {
            "type": "string",
            "readOnly": true
          },
          "city": {
            "type": "string",
            "readOnly": true
          },
          "street": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "country",
          "state",
          "postalCode",
          "city",
          "street"
        ]
      },
      "ExternalApiAccessCodeUserAndAddressCreateOutgoingDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "courseGroupSyncId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "activeUntil": {
            "format": "date-time",
            "type": "string"
          },
          "learningProgress": {
            "type": "number"
          },
          "trainingProgress": {
            "type": "number"
          },
          "user": {
            "$ref": "#/components/schemas/ExternalApiCreateUserDto"
          },
          "address": {
            "$ref": "#/components/schemas/ExternalApiAddressDto"
          }
        },
        "required": [
          "syncId",
          "courseGroupSyncId",
          "active",
          "learningProgress",
          "trainingProgress",
          "user",
          "address"
        ]
      },
      "ExternalApiUpdateUserDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "maxLength": 255
          },
          "firstname": {
            "type": "string",
            "maxLength": 255
          },
          "lastname": {
            "type": "string",
            "maxLength": 255
          },
          "birthdate": {
            "format": "date-time",
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 255
          },
          "unlink": {
            "type": "boolean"
          }
        },
        "required": [
          "syncId"
        ]
      },
      "ExternalApiUpdateAddressDto": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "maxLength": 255
          },
          "postalCode": {
            "type": "string",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "maxLength": 255
          },
          "street": {
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "ExternalApiAccessCodeUserAndAddressUpdateOutgoingDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "activeUntil": {
            "format": "date-time",
            "type": "string"
          },
          "learningProgress": {
            "type": "number"
          },
          "trainingProgress": {
            "type": "number"
          },
          "user": {
            "$ref": "#/components/schemas/ExternalApiUpdateUserDto"
          },
          "address": {
            "$ref": "#/components/schemas/ExternalApiUpdateAddressDto"
          }
        }
      },
      "ExternalApiAvatarDto": {
        "type": "object",
        "properties": {
          "userSyncId": {
            "type": "string"
          },
          "svg": {
            "type": "string"
          }
        },
        "required": [
          "userSyncId",
          "svg"
        ]
      }
    }
  }
}