{
  "openapi": "3.0.0",
  "paths": {
    "/api/external/sync": {
      "post": {
        "operationId": "ExternalApiController_startSyncAndSetOutgoingApiKey",
        "summary": "Set the outgoing API key of tenant and enable the sync queue for that tenant",
        "description": "The external caller sends a request which contains a Yarrive API key in the header.\n      The caller's own API key is sent in the request body. As a result, the caller's API key is saved in the tenant\n      corresponding to the sent Yarrive API key and the sync queue of that tenant is activated",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "Sync"
        ]
      },
      "patch": {
        "operationId": "ExternalApiController_updateOutgoingApiKey",
        "summary": "Update outgoing API key of tenant",
        "description": "Update outgoing API key of tenant given by (Yarrive/incoming) API key in the request header",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "Sync"
        ]
      }
    },
    "/api/external/tenants/addresses": {
      "post": {
        "operationId": "ExternalApiTenantAddressController_createTenantAddress",
        "summary": "Create tenant address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiCreateTenantAddressDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiTenantAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "operationId": "ExternalApiTenantAddressController_updateTenantAddress",
        "summary": "Update tenant address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiUpdateTenantAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiTenantAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "get": {
        "operationId": "ExternalApiTenantAddressController_getTenantAddresses",
        "summary": "Get all addresses of tenant",
        "description": "Note: this is a GET endpoint but it has a sideffect:\n      the syncId is generated and set for each retrieved tenant address which does not have a syncId\n      before the addresses are returned in the response",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiTenantAddressesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/api/external/course-groups": {
      "get": {
        "operationId": "ExternalApiCourseGroupsController_getCourseGroups",
        "summary": "Get all course groups of tenant",
        "description": "Note: this is a GET endpoint but it has a sideffect:\n    the syncId is generated and set for each retrieved course group which does not have a syncId\n    before the course groups are returned in the response",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiCourseGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "CourseGroups"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "KFV Lernplattform External API",
    "description": "External API for KFV-Lernplattform",
    "version": "0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "X-Api-Key": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header",
        "description": "Retrieve an API key for your tenant in the Yarrive Admin interface."
      }
    },
    "schemas": {
      "ExternalApiErrorResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "error": {
            "type": "string",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "details": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "error",
          "message"
        ]
      },
      "SetApiKeyDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "minLength": 16,
            "maxLength": 512
          }
        },
        "required": [
          "apiKey"
        ]
      },
      "ExternalApiSuccessResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "success"
        ]
      },
      "ExternalApiCreateTenantAddressDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "maxLength": 255
          },
          "postalCode": {
            "type": "string",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "maxLength": 255
          },
          "street": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "isBillingAddress": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "openingHours": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "syncId",
          "country",
          "state",
          "postalCode",
          "city",
          "street",
          "title",
          "description",
          "isBillingAddress",
          "type",
          "openingHours"
        ]
      },
      "ExternalApiTenantAddressDto": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "readOnly": true
          },
          "state": {
            "type": "string",
            "readOnly": true
          },
          "postalCode": {
            "type": "string",
            "readOnly": true
          },
          "city": {
            "type": "string",
            "readOnly": true
          },
          "street": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "openingHours": {
            "type": "string",
            "readOnly": true
          },
          "isBillingAddress": {
            "type": "boolean",
            "readOnly": true
          },
          "syncId": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "required": [
          "country",
          "state",
          "postalCode",
          "city",
          "street",
          "title",
          "description",
          "openingHours",
          "isBillingAddress",
          "syncId",
          "type"
        ]
      },
      "ExternalApiTenantAddressResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ExternalApiTenantAddressDto"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiUpdateTenantAddressDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "maxLength": 255
          },
          "postalCode": {
            "type": "string",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "maxLength": 255
          },
          "street": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "openingHours": {
            "type": "string",
            "maxLength": 255
          },
          "isBillingAddress": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "syncId"
        ]
      },
      "ExternalApiTenantAddressesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiTenantAddressDto"
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiCourseGroupDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string",
            "readOnly": true
          },
          "licenceType": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "from": {
            "type": "number",
            "readOnly": true
          },
          "to": {
            "type": "number",
            "readOnly": true
          }
        },
        "required": [
          "syncId",
          "licenceType",
          "name",
          "from",
          "to"
        ]
      },
      "ExternalApiCourseGroupsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiCourseGroupDto"
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      }
    }
  }
}