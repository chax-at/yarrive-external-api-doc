{
  "openapi": "3.0.0",
  "paths": {
    "/api/external/sync": {
      "post": {
        "operationId": "ExternalApiController_startSyncAndSetOutgoingApiKey",
        "summary": "Set the outgoing API key of tenant and enable the sync queue for that tenant",
        "description": "The external caller sends a request which contains a Yarrive API key in the header.\n      The caller's own API key is sent in the request body. As a result, the caller's API key is saved in the tenant\n      corresponding to the sent Yarrive API key and the sync queue of that tenant is activated",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "Sync"
        ]
      },
      "patch": {
        "operationId": "ExternalApiController_updateOutgoingApiKey",
        "summary": "Update outgoing API key of tenant",
        "description": "Update outgoing API key of tenant given by (Yarrive/incoming) API key in the request header",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "Sync"
        ]
      }
    },
    "/api/external/tenant-addresses": {
      "post": {
        "operationId": "ExternalApiTenantAddressController_createTenantAddress",
        "summary": "Create tenant address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiCreateTenantAddressDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiTenantAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "operationId": "ExternalApiTenantAddressController_updateTenantAddress",
        "summary": "Update tenant address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiUpdateTenantAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiTenantAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "get": {
        "operationId": "ExternalApiTenantAddressController_getTenantAddresses",
        "summary": "Get all addresses of tenant",
        "description": "Note: this is a GET endpoint but it has a sideffect:\n      the syncId is generated and set for each retrieved tenant address which does not have a syncId\n      before the addresses are returned in the response",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiTenantAddressesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/api/external/tenant-addresses/{syncId}": {
      "delete": {
        "operationId": "ExternalApiTenantAddressController_deleteTenantAddress",
        "summary": "Delete tenant address",
        "description": "Deletes a tenant address unless it's the last one, or the billing address",
        "parameters": [
          {
            "name": "syncId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/api/external/course-groups": {
      "get": {
        "operationId": "ExternalApiCourseGroupsController_getCourseGroups",
        "summary": "Get all course groups of tenant",
        "description": "Note: this is a GET endpoint but it has a sideffect:\n    the syncId is generated and set for each retrieved course group which does not have a syncId\n    before the course groups are returned in the response",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiCourseGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "CourseGroups"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "post": {
        "operationId": "ExternalApiCourseGroupsController_createCourseGroup",
        "summary": "Create course group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiCreateCourseGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiCourseGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "CourseGroups"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "operationId": "ExternalApiCourseGroupsController_updateCourseGroup",
        "summary": "Update course group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiUpdateCourseGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiCourseGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "CourseGroups"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/api/external/course-groups/{syncId}": {
      "delete": {
        "operationId": "ExternalApiCourseGroupsController_deleteCourseGroup",
        "summary": "Delete course group",
        "description": "Deletes a course group unless it has access codes",
        "parameters": [
          {
            "name": "syncId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "CourseGroups"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/api/external/events": {
      "get": {
        "operationId": "ExternalApiEventsController_getEvents",
        "summary": "Get all events of tenant",
        "description": "Note: this is a GET endpoint but it has a sideffect:\n    the syncId is generated and set for each retrieved event which does not have a syncId\n    before the events are returned in the response",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "post": {
        "operationId": "ExternalApiEventsController_createEvent",
        "summary": "Create event",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiCreateEventDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "operationId": "ExternalApiEventsController_updateEvent",
        "summary": "Update event",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiUpdateEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/api/external/events/{syncId}": {
      "delete": {
        "operationId": "ExternalApiEventsController_deleteEvent",
        "summary": "Delete event",
        "description": "Deletes an event unless it already started",
        "parameters": [
          {
            "name": "syncId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiSuccessResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/api/external/access-codes": {
      "get": {
        "operationId": "ExternalApiAccessCodeController_getAccessCodes",
        "summary": "Get all active accessCodes of tenant, including users and their addresses.\n    Every accessCode includes a user. If one user has multiple accessCodes it will occur multiple times.",
        "description": "Note: this is a GET endpoint but it has a sideffect:\n    the syncId is generated and set for each retrieved accessCode and user\n    which does not have a syncId before the data is returned in the response",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiAccessCodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "AccessCodes"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "post": {
        "operationId": "ExternalApiAccessCodeController_createAccessCode",
        "summary": "Create accessCode and possibly user with address",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiAccessCodeUserAndAddressCreateIncomingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiAccessCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "AccessCodes"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      },
      "patch": {
        "operationId": "ExternalApiAccessCodeController_updateAccessCode",
        "summary": "Update accessCode and/or user and/or address of user",
        "description": "It is possible to update a user without accessCode-syncId.\n    In this case the response will include any of the valid accessCodes the user has at the given tenant.\n    In case an accessCode-syncId is provided this exact accessCode is included in the response,",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalApiAccessCodeUserAndAddressUpdateIncomingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiAccessCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "AccessCodes"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    },
    "/api/external/users/avatars": {
      "get": {
        "operationId": "ExternalApiAvatarController_getAvatars",
        "summary": "Get all active accessCodes of tenant, including users and their addresses.\n    Every accessCode includes a user. If one user has multiple accessCodes it will occur multiple times.",
        "description": "Note: this is a GET endpoint but it has a sideffect:\n    the syncId is generated and set for each retrieved accessCode and user\n    which does not have a syncId before the data is returned in the response",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiAvatarsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Generic Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalApiErrorResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Avatars"
        ],
        "security": [
          {
            "X-Api-Key": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "KFV Lernplattform External API",
    "description": "External API for KFV-Lernplattform",
    "version": "0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "X-Api-Key": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header",
        "description": "Retrieve an API key for your tenant in the Yarrive Admin interface."
      }
    },
    "schemas": {
      "ExternalApiErrorResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "error": {
            "type": "string",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "details": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "error",
          "message"
        ]
      },
      "SetApiKeyDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "minLength": 16,
            "maxLength": 512
          }
        },
        "required": [
          "apiKey"
        ]
      },
      "ExternalApiSuccessResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "success"
        ]
      },
      "ExternalApiCreateTenantAddressDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "maxLength": 255
          },
          "postalCode": {
            "type": "string",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "maxLength": 255
          },
          "street": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "openingHours": {
            "type": "string",
            "maxLength": 255
          },
          "isBillingAddress": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "syncId",
          "country",
          "state",
          "postalCode",
          "city",
          "street",
          "title",
          "description",
          "openingHours",
          "isBillingAddress",
          "type"
        ]
      },
      "ExternalApiTenantAddressDto": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "readOnly": true
          },
          "state": {
            "type": "string",
            "readOnly": true
          },
          "postalCode": {
            "type": "string",
            "readOnly": true
          },
          "city": {
            "type": "string",
            "readOnly": true
          },
          "street": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "openingHours": {
            "type": "string",
            "readOnly": true
          },
          "isBillingAddress": {
            "type": "boolean",
            "readOnly": true
          },
          "syncId": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "required": [
          "country",
          "state",
          "postalCode",
          "city",
          "street",
          "title",
          "description",
          "openingHours",
          "isBillingAddress",
          "syncId",
          "type"
        ]
      },
      "ExternalApiTenantAddressResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ExternalApiTenantAddressDto"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiUpdateTenantAddressDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "maxLength": 255
          },
          "postalCode": {
            "type": "string",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "maxLength": 255
          },
          "street": {
            "type": "string",
            "maxLength": 255
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "openingHours": {
            "type": "string",
            "maxLength": 255
          },
          "isBillingAddress": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "syncId"
        ]
      },
      "ExternalApiTenantAddressesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiTenantAddressDto"
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiCourseGroupDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string",
            "readOnly": true
          },
          "licenseType": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "from": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          },
          "to": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "syncId",
          "licenseType",
          "name",
          "description",
          "from",
          "to"
        ]
      },
      "ExternalApiCourseGroupsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiCourseGroupDto"
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiCreateCourseGroupDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "licenseType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "format": "date-time",
            "type": "string"
          },
          "to": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "syncId",
          "licenseType",
          "name",
          "description",
          "from",
          "to"
        ]
      },
      "ExternalApiCourseGroupResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ExternalApiCourseGroupDto"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiUpdateCourseGroupDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "format": "date-time",
            "type": "string"
          },
          "to": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "syncId"
        ]
      },
      "ExternalApiEventAttendeeDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "attended": {
            "type": "boolean",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "syncId",
          "attended",
          "note"
        ]
      },
      "ExternalApiEventDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true
          },
          "plannedDateFrom": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          },
          "plannedDateTo": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "tenantAddressSyncId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mandatory": {
            "type": "boolean",
            "readOnly": true
          },
          "attendees": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiEventAttendeeDto"
            }
          }
        },
        "required": [
          "syncId",
          "type",
          "plannedDateFrom",
          "plannedDateTo",
          "title",
          "description",
          "tenantAddressSyncId",
          "mandatory",
          "attendees"
        ]
      },
      "ExternalApiEventsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiEventDto"
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiCreateEventDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "plannedDateFrom": {
            "format": "date-time",
            "type": "string"
          },
          "plannedDateTo": {
            "format": "date-time",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantAddressSyncId": {
            "type": "string",
            "nullable": true
          },
          "mandatory": {
            "type": "boolean"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiEventAttendeeDto"
            }
          }
        },
        "required": [
          "syncId",
          "type",
          "plannedDateFrom",
          "plannedDateTo",
          "title",
          "description",
          "tenantAddressSyncId",
          "mandatory",
          "attendees"
        ]
      },
      "ExternalApiEventResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ExternalApiEventDto"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiUpdateEventDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "plannedDateFrom": {
            "format": "date-time",
            "type": "string"
          },
          "plannedDateTo": {
            "format": "date-time",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantAddressSyncId": {
            "type": "string",
            "nullable": true
          },
          "mandatory": {
            "type": "boolean"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiEventAttendeeDto"
            }
          }
        },
        "required": [
          "syncId",
          "attendees"
        ]
      },
      "ExternalApiUserDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "readOnly": true
          },
          "firstname": {
            "type": "string",
            "readOnly": true
          },
          "lastname": {
            "type": "string",
            "readOnly": true
          },
          "birthdate": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          },
          "phoneNumber": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "syncId",
          "email",
          "firstname",
          "lastname",
          "birthdate",
          "phoneNumber"
        ]
      },
      "ExternalApiAddressDto": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "readOnly": true
          },
          "state": {
            "type": "string",
            "readOnly": true
          },
          "postalCode": {
            "type": "string",
            "readOnly": true
          },
          "city": {
            "type": "string",
            "readOnly": true
          },
          "street": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "country",
          "state",
          "postalCode",
          "city",
          "street"
        ]
      },
      "ExternalApiAccessCodeUserAndAddressReadDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string",
            "readOnly": true
          },
          "courseGroupSyncId": {
            "type": "string",
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "readOnly": true
          },
          "activeUntil": {
            "format": "date-time",
            "type": "string",
            "readOnly": true
          },
          "learningProgress": {
            "type": "number",
            "readOnly": true
          },
          "trainingProgress": {
            "type": "number",
            "readOnly": true
          },
          "user": {
            "$ref": "#/components/schemas/ExternalApiUserDto"
          },
          "address": {
            "$ref": "#/components/schemas/ExternalApiAddressDto"
          }
        },
        "required": [
          "syncId",
          "courseGroupSyncId",
          "active",
          "learningProgress",
          "trainingProgress",
          "user"
        ]
      },
      "ExternalApiAccessCodesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiAccessCodeUserAndAddressReadDto"
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiCreateUserDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "maxLength": 255
          },
          "firstname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "lastname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "birthdate": {
            "format": "date-time",
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          }
        },
        "required": [
          "syncId"
        ]
      },
      "ExternalApiCreateAddressDto": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "maxLength": 255
          },
          "postalCode": {
            "type": "string",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "maxLength": 255
          },
          "street": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "country",
          "state",
          "postalCode",
          "city",
          "street"
        ]
      },
      "ExternalApiAccessCodeUserAndAddressCreateIncomingDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "courseGroupSyncId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "activeUntil": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/ExternalApiCreateUserDto"
          },
          "address": {
            "$ref": "#/components/schemas/ExternalApiCreateAddressDto"
          }
        },
        "required": [
          "syncId",
          "courseGroupSyncId",
          "active",
          "user"
        ]
      },
      "ExternalApiAccessCodeResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ExternalApiAccessCodeUserAndAddressReadDto"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExternalApiUpdateUserDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "maxLength": 255
          },
          "firstname": {
            "type": "string",
            "maxLength": 255
          },
          "lastname": {
            "type": "string",
            "maxLength": 255
          },
          "birthdate": {
            "format": "date-time",
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "syncId"
        ]
      },
      "ExternalApiUpdateAddressDto": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "maxLength": 255
          },
          "state": {
            "type": "string",
            "maxLength": 255
          },
          "postalCode": {
            "type": "string",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "maxLength": 255
          },
          "street": {
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "ExternalApiAccessCodeUserAndAddressUpdateIncomingDto": {
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "activeUntil": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/ExternalApiUpdateUserDto"
          },
          "address": {
            "$ref": "#/components/schemas/ExternalApiUpdateAddressDto"
          }
        }
      },
      "ExternalApiAvatarDto": {
        "type": "object",
        "properties": {
          "userSyncId": {
            "type": "string"
          },
          "svg": {
            "type": "string"
          }
        },
        "required": [
          "userSyncId",
          "svg"
        ]
      },
      "ExternalApiAvatarsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalApiAvatarDto"
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      }
    }
  }
}